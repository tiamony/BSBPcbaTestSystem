<pu:WindowX x:Class="BsbPcbaTestSpace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:pu="clr-namespace:Panuon.UI.Silver;assembly=Panuon.UI.Silver"
        xmlns:local="clr-namespace:BsbPcbaTestSpace"  
        Title="{Binding StrWindowTitle}" Height="700" Width="1200" FontSize="18" WindowState="Maximized" Closing="WindowX_Closing"
        Icon="Images/BSB.png" Name="titleWindow" MouseDoubleClick="TitleWindow_PreviewMouseDoubleClick" Loaded="TitleWindow_Loaded">

    <!--define command -->
    <Window.Resources>
        <ResourceDictionary x:Uid="CommandDict">
            <RoutedCommand x:Uid="AddCommand" x:Key="AddCommand" />
            <RoutedCommand x:Uid="SubCommand" x:Key="SubCommand" />
        </ResourceDictionary>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding x:Uid="AddCommandParameter" Command="{StaticResource AddCommand}" CanExecute="Add_CanExecute" Executed="Add_Executed" />
        <CommandBinding x:Uid="SubCommandParameter" Command="{StaticResource SubCommand}" CanExecute="Sub_CanExecute" Executed="Sub_Executed" />
    </Window.CommandBindings>
    
    <!-- assign shortcut with command -->
    <Window.InputBindings>
        <KeyBinding x:Uid="AddKeyBinding" Gesture="Alt + S" Command="{StaticResource AddCommand}"/>
        <KeyBinding x:Uid="SubkeyBinding" Key="E" Modifiers="Alt" Command="{StaticResource SubCommand}"/>
    </Window.InputBindings>
    <Grid>
        <Grid.Resources>
            <ResourceDictionary>
                <local:ColorConverter x:Key="DataColorConverterStyle"/>
            </ResourceDictionary>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="28" />
            <RowDefinition Height="80" />
            <RowDefinition Height="100"/>
            <RowDefinition Height="180"/>
            <RowDefinition Height="125*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="280"/>
            <ColumnDefinition Width="649*"/>
        </Grid.ColumnDefinitions>
        <Border BorderThickness="0,1,0,1" BorderBrush="DarkGray" Grid.ColumnSpan="2" Grid.Row="0">

            <Menu  Name="BarMean" VerticalAlignment="Center" HorizontalAlignment="Left" Background="White" FontSize="18" 
                  pu:MenuHelper.HoverBackground="#FF1A7FB7" pu:MenuHelper.MenuStyle="Standard" FontFamily="Arial" pu:MenuHelper.Orientation="Horizontal"
                      pu:MenuHelper.SubmenuCornerRadius="5" Height="30" pu:MenuHelper.SubmenuWidth="130" pu:MenuHelper.SubmenuItemHeight="30" Width="500">
                <MenuItem Header="文件">
                    <MenuItem Name="newFileMenu" Header="新建文件" Icon="Icon/newfile.png" Command="{Binding NewFile}"></MenuItem>
                    <MenuItem  Header="打开文件" Icon="Icon/openfile.png" Command="{Binding OpenFile}"></MenuItem>
                    <MenuItem Header="退出" Command="{Binding ExitMeun}" Icon="Icon/exit.png"/>
                </MenuItem>
                <MenuItem Header="参数">
                    <!--
                    <MenuItem Header="参数设定" Command="{Binding SetParmMeun}" Icon="Icon/parmseting.png"/>
                    -->
                    <MenuItem Name="setParmMenu" Header="参数设定" Command="{Binding SetParmNewMeun}" Icon="Icon/parmseting.png"/>
                    <MenuItem Name="reloadSetingMenu" Header="重新加载配置" Command="{Binding ReLoadParmMeun}" Icon="Icon/LoadConfig.png"/>
                </MenuItem>
                <MenuItem Header="数据库操作">
                    <MenuItem Header="连接测试" Command="{Binding ConnDb}" Icon="Icon/Conn.png" IsEnabled="False"/>
                    <MenuItem Name="sqlQueryMenu" Header="数据库查询" Command="{Binding QuerySqlMeun}" Icon="Icon/querybysql.png"/>
                </MenuItem>
                <MenuItem Header="帮助">
                    <MenuItem Header="关于" Command="{Binding AbortMeun}" Icon="Icon/about.png"/>
                </MenuItem>
            </Menu>
        </Border>
        <Canvas Name="userInfoCanvas" Grid.Row="1"  Background="White" MouseMove="Canvas_MouseMove" Grid.ColumnSpan="2" Margin="0" >
            <Image Stretch="UniformToFill" Height="80" Canvas.Left="0" Canvas.Top="0" Source="Images/BSB.png"/>
            <Label Content="充电桩PCBA测试系统" Canvas.Left="100" Canvas.Bottom="30" FontWeight="Bold" FontFamily="YouYuan" FontSize="30" Foreground="Black"></Label>
            <Label Content="巴斯巴(深圳)科技发展有限公司" Canvas.Bottom="3" Canvas.Left="120" FontWeight="Bold" FontFamily="YouYuan" FontSize="15" Foreground="Black"></Label>
            <Image Name="userImage" Height="50" Width="50" Canvas.Right="20" Canvas.Top="15" Source="{Binding ShowFaceImage}"></Image>
            <Label x:Name="userName" Content="{Binding User,UpdateSourceTrigger=PropertyChanged}" Canvas.Right="80" Canvas.Top="25"  FontFamily="YouYuan" FontSize="20" Foreground="Gray"
                   MouseMove="Mouse_MouseMove" MouseLeave="UserName_MouseLeave" ToolTip="已登录" Cursor="Hand" 
                   MouseLeftButtonUp="UserName_MouseLeftButtonUp"></Label>
        </Canvas>
        <GroupBox Grid.Column="0" Grid.Row="2" Header="连接" pu:GroupBoxHelper.CornerRadius="10" 
                  pu:GroupBoxHelper.Icon="Icon/connent.png" pu:IconHelper.Width="30"  pu:GroupBoxHelper.IsSplitLineVisible="True" Margin="10,5,10,0"  pu:GroupBoxHelper.HeaderForeground="Black">
            <StackPanel Margin="0,2">
                <StackPanel Orientation="Horizontal" >
                    <Button Content="连接" Name="openCom" Width="90" Height="26" pu:ButtonHelper.ClickStyle="Sink" pu:ButtonHelper.CornerRadius="5" 
                          pu:ButtonHelper.Icon="Icon/open.png" pu:IconHelper.Width="30" Foreground="White"  Margin="10,1,0,0" Click="Button_Click" >
                        <Button.BorderBrush>
                            <ImageBrush/>
                        </Button.BorderBrush>
                        <Button.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="White" Offset="1"/>
                            </LinearGradientBrush>
                        </Button.Background>
                    </Button>
                    <Button Content="断开连接" Name="closeCom" IsEnabled="False" Width="90" Height="26" pu:ButtonHelper.ClickStyle="Sink" 
                          pu:ButtonHelper.Icon="Icon/close.png" pu:IconHelper.Width="30" Foreground="White" pu:ButtonHelper.CornerRadius="5"  Margin="30,1,0,0" Click="CloseCom_Click">
                        <Button.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="White" Offset="1"/>
                            </LinearGradientBrush>
                        </Button.Background>
                    </Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock    Height="25"  Text="状态:"  Margin="10,5,0,0" FontSize="13"/>
                    <TextBlock   Height="25"  Text="未连接" Name="statusText"  Margin="8,5,0,0"  Foreground="Black" FontSize="13"/>
                </StackPanel>
            </StackPanel>
        </GroupBox>
        <GroupBox Grid.Column="0" Grid.Row="3" Header="测试" pu:GroupBoxHelper.CornerRadius="10" pu:GroupBoxHelper.Icon="Icon/seting.png"
               pu:IconHelper.Width="30"   pu:GroupBoxHelper.IsSplitLineVisible="True" Margin="10,25,10,0"  pu:GroupBoxHelper.HeaderForeground="Black"  >
            <StackPanel Margin="0,2" Orientation="Horizontal" Name="testSTP">
                <StackPanel Orientation="Vertical" >
                    <Button Content="启动测试" Name="startTestBtn"  Width="90" Height="26" pu:ButtonHelper.ClickStyle="Sink" pu:ButtonHelper.CornerRadius="5" 
                           pu:ButtonHelper.Icon="/Icon/start.png" pu:IconHelper.Width="30" pu:IconHelper.Foreground="Blue" Margin="10,1,0,0"
                            Command="{StaticResource AddCommand}" IsEnabled="False">
                        <Button.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="White" Offset="1"/>
                            </LinearGradientBrush>
                        </Button.Background>
                    </Button>
                    <RadioButton Content="单项测试" IsChecked="{Binding isSelectTestOne}" FontSize="12" Margin="10,5,0,0" />
                    <RadioButton Content="整体测试" IsChecked="{Binding isSelectTestAll}" FontSize="12" Margin="10,5,0,0" />
                    <RadioButton Content="自动测试" IsChecked="{Binding isSelectAutoTest}" Visibility="Hidden" FontSize="12" Margin="10,5,0,0"/>
                </StackPanel>
                <StackPanel Orientation="Vertical">
                    <Button Content="停止测试" IsEnabled="False" Name="stopTestBtn"  Width="90" Height="26" pu:ButtonHelper.ClickStyle="Sink"
                           Foreground="White" pu:ButtonHelper.CornerRadius="5" pu:ButtonHelper.WaitingContent="终止..."
                           pu:ButtonHelper.Icon="Icon/stop.png" pu:IconHelper.Width="30" pu:ButtonHelper.IsWaiting="{Binding isAboutTestFlag}" 
                           Command="{StaticResource SubCommand}" Margin="30,1,0,0">
                        <Button.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="White" Offset="1"/>
                            </LinearGradientBrush>
                        </Button.Background>
                    </Button>
                    <RadioButton Content="测试失败时停止" IsChecked="{Binding isStopWhenFail}" FontSize="12" Margin="10,5,0,0" />
                    <RadioButton Content="测试完所有项目" IsChecked="{Binding isStopWhenFinsh}" FontSize="12" Margin="10,5,0,0"/>
                </StackPanel>
            </StackPanel>
        </GroupBox>
        <!--
        <Border Grid.Column="1" Grid.Row="2" Grid.RowSpan="3" BorderThickness="1,1,1,1" BorderBrush="#FFD8D5D5">
            <Button Content="点击添加测试文件" Name="newbtn" Width="150" Height="26" pu:ButtonHelper.ClickStyle="Sink" pu:ButtonHelper.CornerRadius="5" 
                          pu:ButtonHelper.Icon="Icon/add.png" pu:IconHelper.Width="40" Foreground="Black" Background="White" pu:ButtonHelper.HoverBrush="Gray"
                          />
        </Border>
        -->
        <Border Grid.Column="1" Grid.Row="2" Grid.RowSpan="3" Visibility="Visible" Margin="0,0,0,6">
            <DataGrid x:Name="TestBody" SelectionMode="Single" Background="White" SelectionUnit="FullRow" AutoGenerateColumns="False"
                       IsReadOnly="True" CanUserSortColumns="False" CanUserResizeRows="False" pu:DataGridHelper.SelectedBackground="Gray"
                      pu:DataGridHelper.HeaderBackground="White" CanUserReorderColumns="False" SelectionChanged="TestBody_SelectionChanged">
                <DataGrid.Columns>
                    <DataGridTemplateColumn  Header="选择" Width="1.5*">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding isCheckedBoxTrue, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"></CheckBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn  Header="序号" Width="1.5*">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Center" Text="{Binding id}"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn  Header="项目名称" Width="4*">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Center" Text="{Binding testName}"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn  Header="测试内容" Width="4*">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Center" Text="{Binding testBody}"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    
                    <DataGridTemplateColumn  Header="上限" Width="2*">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Center" Text="{Binding testTopLimit}"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn  Header="下限" Width="2*">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Center" Text="{Binding testFloor}"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn  Header="测试值" Width="2.5*">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Center" Text="{Binding resultData}"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn  Header="测试结果" Width="2.5*">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Center" Foreground="{Binding testResult,Converter={StaticResource DataColorConverterStyle}}" Text="{Binding testResult}"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn  Header="备注" Width="5*">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Center" Text="{Binding remarks}"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>

            </DataGrid>
        </Border>
        <StatusBar Grid.Column="0" Grid.Row="5" Grid.ColumnSpan="2" Name="statusBar" Background="#FF007ACC" Padding="2">
            <StatusBarItem HorizontalAlignment="Left">
                <TextBlock Name="statusInfoTextBlock" Foreground="White">欢迎使用巴斯巴PCBA测试系统！</TextBlock>
            </StatusBarItem>
            <StatusBarItem>
                <ProgressBar Name="progressBar" Foreground="White" BorderBrush="White" Background="{Binding ElementName=statusBar, Path=Background}" 
                             Visibility="Collapsed" Width="150" Height="10" Value="10" SmallChange="1" IsIndeterminate="True" Margin="10,0,0,0"></ProgressBar>
            </StatusBarItem>
            <StatusBarItem Margin="0,0,0,0" Name="dataRecvStatusBarItem" Visibility="Collapsed">
                <StackPanel Orientation="Horizontal">
                    <Ellipse Height="5" Width="5" Fill="White" Margin="0,0,5,0"></Ellipse>
                    <Ellipse Height="5" Width="5" Fill="White" Margin="0,0,5,0"></Ellipse>
                    <Ellipse Height="5" Width="5" Fill="White" Margin="0,0,5,0"></Ellipse>
                    <Ellipse Height="5" Width="5" Fill="White" Margin="0,0,5,0"></Ellipse>
                    <Ellipse Height="5" Width="5" Fill="White" Margin="0,0,5,0"></Ellipse>
                    <Ellipse Height="5" Width="5" Fill="White"></Ellipse>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock Name="timeDateTextBlock" Foreground="White"></TextBlock>
            </StatusBarItem>
        </StatusBar>

        <GroupBox Grid.Column="0" Grid.Row="4" Header="测试结果" pu:GroupBoxHelper.CornerRadius="10" pu:GroupBoxHelper.Icon="Icon/waitingTest.png"
                      pu:IconHelper.Width="30" Margin="10,25,10,0"  pu:GroupBoxHelper.HeaderForeground="Black" pu:GroupBoxHelper.IsSplitLineVisible="True">
            <Viewbox>
                <StackPanel Orientation="Vertical">
                    <ProgressBar Name="TestingFlagProbar" Height="60" Width="60"  Grid.Column="0" Grid.Row="4" pu:ProgressBarHelper.ProgressBarStyle="Ring"
                 pu:ProgressBarHelper.AnimateTo="{Binding progressPrecent}"   pu:ProgressBarHelper.IsPercentVisible="True"></ProgressBar>
                    <Label  Name="resultLabel" Content="{Binding ResultViewModel,UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding Path=ResultViewModel,Converter={StaticResource DataColorConverterStyle}}"
                       HorizontalAlignment="Center"  VerticalAlignment="Center" 
                       FontSize="10" />
                </StackPanel>
            </Viewbox>
        </GroupBox>
        
    </Grid>
</pu:WindowX>
